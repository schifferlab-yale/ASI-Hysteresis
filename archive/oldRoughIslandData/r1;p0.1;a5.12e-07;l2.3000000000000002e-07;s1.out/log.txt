//mumax 3.10 [windows_amd64 go1.11.6(gc) CUDA-11.0]
//GPU info: NVIDIA GeForce RTX 3090(24575MB), CUDA Driver 11.7, cc=8.6, using cc=80 PTX
//(c) Arne Vansteenkiste, Dynamat LAB, Ghent University, Belgium
//This is free software without any warranty. See license.txt
//********************************************************************//
//  If you use mumax in any work or publication,                      //
//  we kindly ask you to cite the references in references.bib        //
//********************************************************************//
//output directory: r1;p0.1;a5.12e-07;l2.3000000000000002e-07;s1.out/
randSeed(1)
ThermSeed(1)
resolution := 2e-09
zResolution := 5e-09
a := 5.12e-07
gridSize := 512
gridDepth := 5
SetCellsize(resolution, resolution, zResolution)
SetGridsize(gridSize, gridSize, gridDepth)
SetPBC(16, 16, 0)
//resizing...
Msat = 700e3
Aex = 13e-12
alpha = 0.2
Bmax := 0.1
Bstep := Bmax / 500.0
TableAdd(B_ext)
TableAdd(m_full)
islandWidth := 8e-08
islandLength := 2.3000000000000002e-07
ellipseConstant := 1.1500000000000002e-08
hIsland := rect(islandLength-2*ellipseConstant, islandWidth)
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(islandLength/2-ellipseConstant, 0, 0))
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(-islandLength/2+ellipseConstant, 0, 0))
hIsland = hIsland.sub(rect(3.0323151571700324e-09, 3.0323151571700324e-09).transl(-5.7293003821460096e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(5.092530664351113e-09, 5.092530664351113e-09).transl(4.0264651524716134e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(2.1723431231734315e-09, 2.1723431231734315e-09).transl(-2.758764639167482e-08, 4e-08, 0))
hIsland = hIsland.add(rect(4.011602951750393e-10, 4.011602951750393e-10).transl(-1.0154625437057546e-07, 4e-08, 0))
hIsland = hIsland.sub(rect(9.955466712427438e-09, 9.955466712427438e-09).transl(-4.305262226894218e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(3.500501735230448e-09, 3.500501735230448e-09).transl(8.914838484919807e-08, -4e-08, 0))
hIsland = hIsland.add(rect(3.5613684965789973e-09, 3.5613684965789973e-09).transl(8.896804128586456e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(9.324020785315218e-09, 9.324020785315218e-09).transl(5.312743997453895e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(5.046172377241618e-09, 5.046172377241618e-09).transl(3.200057215652215e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(7.300863653394063e-10, 7.300863653394063e-10).transl(2.5159632324179656e-08, 4e-08, 0))
hIsland = hIsland.add(rect(4.305376048211562e-09, 4.305376048211562e-09).transl(-4.1276946433922924e-08, 4e-08, 0))
hIsland = hIsland.add(rect(3.0052524094313492e-09, 3.0052524094313492e-09).transl(-5.724994834318507e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(1.789465857507172e-09, 1.789465857507172e-09).transl(8.23412295256357e-09, -4e-08, 0))
hIsland = hIsland.sub(rect(7.749385293351065e-09, 7.749385293351065e-09).transl(3.937563201895863e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(3.448692821385203e-09, 3.448692821385203e-09).transl(-7.120968820718061e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(8.869026701767032e-09, 8.869026701767032e-09).transl(-6.16051270103406e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(8.28215448654342e-09, 8.28215448654342e-09).transl(-6.496457272278433e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(5.2306670816377414e-09, 5.2306670816377414e-09).transl(5.992797250544119e-10, 4e-08, 0))
hIsland = hIsland.sub(rect(9.360451358101572e-09, 9.360451358101572e-09).transl(-1.0588108052424307e-07, 3.9133210419365944e-08, 0))
hIsland = hIsland.sub(rect(2.0441638252967143e-09, 2.0441638252967143e-09).transl(8.116864662075386e-09, -4e-08, 0))
hIsland = hIsland.add(rect(9.632530941320795e-09, 9.632530941320795e-09).transl(-9.339541741453333e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.225526058565821e-09, 8.225526058565821e-09).transl(-8.579143355378542e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(1.0167640375622877e-09, 1.0167640375622877e-09).transl(-2.077787075304101e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(6.3960036307005745e-09, 6.3960036307005745e-09).transl(-3.133536818461177e-08, -4e-08, 0))
hIsland = hIsland.add(rect(5.77429277919039e-09, 5.77429277919039e-09).transl(-3.5440695760654464e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.390884024244865e-09, 8.390884024244865e-09).transl(7.035206302928371e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.375385182346463e-09, 8.375385182346463e-09).transl(7.613468037070584e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(9.82224988767214e-09, 9.82224988767214e-09).transl(-8.552289539276257e-08, -4e-08, 0))
hIsland = hIsland.add(rect(3.5734203895347905e-09, 3.5734203895347905e-09).transl(-4.980386761832109e-08, 4e-08, 0))
hIsland = hIsland.add(rect(1.1624297881649093e-09, 1.1624297881649093e-09).transl(-1.0309323965564047e-08, 4e-08, 0))
hIsland = hIsland.add(rect(6.510910045172451e-09, 6.510910045172451e-09).transl(-2.9101612227392377e-08, -4e-08, 0))
hIsland = hIsland.add(rect(6.824322982902305e-09, 6.824322982902305e-09).transl(5.360323957471077e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(5.150322190303048e-09, 5.150322190303048e-09).transl(5.38195476989483e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(7.559296323006897e-09, 7.559296323006897e-09).transl(8.036466275528887e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(9.337868214246303e-09, 9.337868214246303e-09).transl(-8.360282740483973e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(8.580541142812771e-09, 8.580541142812771e-09).transl(9.951050900437982e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(6.187809679572994e-09, 6.187809679572994e-09).transl(-2.6784359695609534e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(2.3182714550236384e-09, 2.3182714550236384e-09).transl(2.4190821508735248e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(6.408822452491928e-09, 6.408822452491928e-09).transl(1.006563540799065e-07, 4e-08, 0))
hIsland = hIsland.sub(rect(8.400054567109807e-09, 8.400054567109807e-09).transl(-5.692546128464549e-08, 4e-08, 0))
hIsland = hIsland.add(rect(8.90223132862992e-09, 8.90223132862992e-09).transl(-5.255710304255608e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(8.56642573829239e-09, 8.56642573829239e-09).transl(2.4583693916097845e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(7.833818864436944e-09, 7.833818864436944e-09).transl(4.47450975511519e-08, -4e-08, 0))
hIsland = hIsland.add(rect(5.563651548585025e-09, 5.563651548585025e-09).transl(1.0949760971608298e-07, 3.412928652841932e-08, 0))
hIsland = hIsland.add(rect(9.97992022919878e-10, 9.97992022919878e-10).transl(-1.7873429096745706e-08, 4e-08, 0))
hIsland = hIsland.add(rect(8.919165047270644e-09, 8.919165047270644e-09).transl(6.534441266335132e-08, 4e-08, 0))
hIsland = hIsland.add(rect(8.694027190999384e-09, 8.694027190999384e-09).transl(-1.1393396559321427e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(3.2466248252590403e-09, 3.2466248252590403e-09).transl(9.311114724805299e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(6.339787291881595e-09, 6.339787291881595e-09).transl(1.1017407151168398e-07, -3.257457126137887e-08, 0))
hIsland = hIsland.sub(rect(1.864219943863217e-09, 1.864219943863217e-09).transl(-7.206552821318974e-08, -4e-08, 0))
vIsland := hIsland.rotz(pi / 2)
vIslands := Universe().Inverse()
hIslands := Universe().Inverse()
hIslands = hIslands.add(hIsland.transl(-a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, 0, 0))
hIslands = hIslands.add(hIsland.transl(a/2, 0, 0))
vIslands = vIslands.add(vIsland.transl(-a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(-a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, -a/2, 0))
DefRegion(1, hIslands)
DefRegion(2, vIslands)
TableAdd(m_full.Region(1))
TableAdd(m_full.Region(2))
setgeom(hIslands.add(vIslands))
save(m)
r2o2 := sqrt(2) / 2
m = RandomMagSeed(4)
B_ext = vector(Bmax*r2o2, Bmax*r2o2, 0)
relax()
minimize()
for B := Bmax; B >= -Bmax; B -= Bstep {
	B_ext = vector(B*r2o2, B*r2o2, 0)
	minimize()
	tablesave()
}
//********************************************************************//
//Please cite the following references, relevant for your simulation. //
//See bibtex file in output folder for justification.                 //
//********************************************************************//
//   * Vansteenkiste et al., AIP Adv. 4, 107133 (2014).
//   * Exl et al., J. Appl. Phys. 115, 17D118 (2014).
