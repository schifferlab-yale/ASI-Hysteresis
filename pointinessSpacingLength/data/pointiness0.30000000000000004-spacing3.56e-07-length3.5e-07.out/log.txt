//mumax 3.10 [windows_amd64 go1.11.6(gc) CUDA-11.0]
//GPU info: NVIDIA GeForce RTX 3090(24575MB), CUDA Driver 11.7, cc=8.6, using cc=80 PTX
//(c) Arne Vansteenkiste, Dynamat LAB, Ghent University, Belgium
//This is free software without any warranty. See license.txt
//********************************************************************//
//  If you use mumax in any work or publication,                      //
//  we kindly ask you to cite the references in references.bib        //
//********************************************************************//
//output directory: pointiness0.30000000000000004-spacing3.56e-07-length3.5e-07.out/
resolution := 2e-09
zResolution := 5e-09
a := 3.56e-07
gridSize := 356
gridDepth := 5
SetCellsize(resolution, resolution, zResolution)
SetGridsize(gridSize, gridSize, gridDepth)
SetPBC(16, 16, 0)
//resizing...
Msat = 700e3
Aex = 13e-12
alpha = 0.2
Bmax := 0.1
Bstep := Bmax / 200.0
TableAdd(B_ext)
TableAdd(m_full)
islandWidth := 8e-08
islandLength := 3.5e-07
ellipseConstant := 5.250000000000001e-08
hIsland := rect(islandLength-2*ellipseConstant, islandWidth)
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(islandLength/2-ellipseConstant, 0, 0))
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(-islandLength/2+ellipseConstant, 0, 0))
vIsland := hIsland.rotz(pi / 2)
vIslands := Universe().Inverse()
hIslands := Universe().Inverse()
hIslands = hIslands.add(hIsland.transl(-a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, 0, 0))
hIslands = hIslands.add(hIsland.transl(a/2, 0, 0))
vIslands = vIslands.add(vIsland.transl(-a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(-a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, -a/2, 0))
DefRegion(1, hIslands)
DefRegion(2, vIslands)
TableAdd(m_full.Region(1))
TableAdd(m_full.Region(2))
setgeom(hIslands.add(vIslands))
r2o2 := sqrt(2) / 2
m = RandomMagSeed(4)
B_ext = vector(Bmax*r2o2, Bmax*r2o2, 0)
relax()
minimize()
for B := Bmax; B >= -Bmax; B -= Bstep {
	B_ext = vector(B*r2o2, B*r2o2, 0)
	minimize()
	tablesave()
}
for B := -Bmax; B <= Bmax; B += Bstep {
	B_ext = vector(B*r2o2, B*r2o2, 0)
	minimize()
	tablesave()
}
//********************************************************************//
//Please cite the following references, relevant for your simulation. //
//See bibtex file in output folder for justification.                 //
//********************************************************************//
//   * Exl et al., J. Appl. Phys. 115, 17D118 (2014).
//   * Vansteenkiste et al., AIP Adv. 4, 107133 (2014).
