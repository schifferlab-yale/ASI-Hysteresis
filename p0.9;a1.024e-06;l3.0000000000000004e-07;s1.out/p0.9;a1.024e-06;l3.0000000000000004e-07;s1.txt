
    randSeed(1)
    ThermSeed(1)


    resolution := 2e-09
    zResolution := 5e-09
    a := 1.024e-06

    gridSize := 1024 //2*a/resolution
    gridDepth := 5 //25/zResolution

    SetCellsize(resolution,resolution,zResolution)
    SetGridsize(gridSize,gridSize,gridDepth)

    SetPBC(16, 16, 0)


    Msat = 700e3
    Aex = 13e-12
    alpha = 0.2
    Bmax := 0.1
    Bstep := Bmax / 500.0


    TableAdd(B_ext)
    TableAdd(m_full)


    islandWidth := 8e-08
    islandLength := 3.0000000000000004e-07
    ellipseConstant:=1.3500000000000003e-07


    hIsland := rect(islandLength-2*ellipseConstant, islandWidth)
    hIsland = hIsland.add(ellipse(ellipseConstant*2,islandWidth).transl(islandLength/2-ellipseConstant, 0, 0))
    hIsland = hIsland.add(ellipse(ellipseConstant*2,islandWidth).transl(-islandLength/2+ellipseConstant, 0, 0))
        

    vIsland := hIsland.rotz(pi / 2)
    vIslands := Universe().Inverse()

    hIslands := Universe().Inverse()
    hIslands = hIslands.add(hIsland.transl(-a/2, a, 0))
    hIslands = hIslands.add(hIsland.transl(-a/2, -a, 0))
    hIslands = hIslands.add(hIsland.transl(a/2, a, 0))
    hIslands = hIslands.add(hIsland.transl(a/2, -a, 0))
    hIslands = hIslands.add(hIsland.transl(-a/2, 0, 0))
    hIslands = hIslands.add(hIsland.transl(a/2, 0, 0))

    vIslands = vIslands.add(vIsland.transl(-a, a/2, 0))
    vIslands = vIslands.add(vIsland.transl(a, a/2, 0))
    vIslands = vIslands.add(vIsland.transl(-a, -a/2, 0))
    vIslands = vIslands.add(vIsland.transl(a, -a/2, 0))
    vIslands = vIslands.add(vIsland.transl(0, a/2, 0))
    vIslands = vIslands.add(vIsland.transl(0, -a/2, 0))

    DefRegion(1, hIslands)
    DefRegion(2, vIslands)
    TableAdd(m_full.Region(1))
    TableAdd(m_full.Region(2))
    setgeom(hIslands.add(vIslands))
    save(m)


    r2o2 := sqrt(2) / 2
    m = RandomMagSeed(4)
    B_ext = vector(Bmax*r2o2, Bmax*r2o2, 0)
    relax()
    minimize()

    for B := Bmax; B >= -Bmax; B -= Bstep {
        B_ext = vector(B*r2o2, B*r2o2, 0)
        minimize()
        tablesave()
    }

    