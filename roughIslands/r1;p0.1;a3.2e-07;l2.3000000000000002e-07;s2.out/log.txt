//mumax 3.10 [windows_amd64 go1.11.6(gc) CUDA-11.0]
//GPU info: NVIDIA GeForce RTX 3090(24575MB), CUDA Driver 11.7, cc=8.6, using cc=80 PTX
//(c) Arne Vansteenkiste, Dynamat LAB, Ghent University, Belgium
//This is free software without any warranty. See license.txt
//********************************************************************//
//  If you use mumax in any work or publication,                      //
//  we kindly ask you to cite the references in references.bib        //
//********************************************************************//
//output directory: r1;p0.1;a3.2e-07;l2.3000000000000002e-07;s2.out/
randSeed(2)
ThermSeed(2)
resolution := 2e-09
zResolution := 5e-09
a := 3.2e-07
gridSize := 320
gridDepth := 5
SetCellsize(resolution, resolution, zResolution)
SetGridsize(gridSize, gridSize, gridDepth)
SetPBC(16, 16, 0)
//resizing...
Msat = 700e3
Aex = 13e-12
alpha = 0.2
Bmax := 0.1
Bstep := Bmax / 500.0
TableAdd(B_ext)
TableAdd(m_full)
islandWidth := 8e-08
islandLength := 2.3000000000000002e-07
ellipseConstant := 1.1500000000000002e-08
hIsland := rect(islandLength-2*ellipseConstant, islandWidth)
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(islandLength/2-ellipseConstant, 0, 0))
hIsland = hIsland.add(ellipse(ellipseConstant*2, islandWidth).transl(-islandLength/2+ellipseConstant, 0, 0))
hIsland = hIsland.add(rect(9.604055004879685e-09, 9.604055004879685e-09).transl(1.2236949513009231e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.829055710474057e-09, 8.829055710474057e-09).transl(8.983549599142065e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(6.008976211881142e-09, 6.008976211881142e-09).transl(-6.445400487885837e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(1.317796368822517e-09, 1.317796368822517e-09).transl(4.8242594565632456e-08, 4e-08, 0))
hIsland = hIsland.add(rect(4.974970388040232e-09, 4.974970388040232e-09).transl(-7.03385965536584e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(2.873509677558137e-09, 2.873509677558137e-09).transl(-3.7321600267376193e-08, 4e-08, 0))
hIsland = hIsland.add(rect(4.762055563976675e-09, 4.762055563976675e-09).transl(-1.0556896530307257e-07, 3.934732280432312e-08, 0))
hIsland = hIsland.add(rect(4.563556007115983e-09, 4.563556007115983e-09).transl(-3.804142576638242e-08, 4e-08, 0))
hIsland = hIsland.add(rect(9.828183019462717e-09, 9.828183019462717e-09).transl(1.0204100831661459e-07, 4e-08, 0))
hIsland = hIsland.sub(rect(3.767065397719929e-09, 3.767065397719929e-09).transl(-7.648418387927303e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(6.39817133573871e-09, 6.39817133573871e-09).transl(-3.966100493994232e-09, 4e-08, 0))
hIsland = hIsland.add(rect(6.534041692932326e-09, 6.534041692932326e-09).transl(-8.561705735634995e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(5.454401678215434e-09, 5.454401678215434e-09).transl(8.120087678282886e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(1.917080065368142e-09, 1.917080065368142e-09).transl(2.7428497878412933e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(7.359438708175987e-09, 7.359438708175987e-09).transl(4.233114953515722e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(2.6535076985721497e-09, 2.6535076985721497e-09).transl(7.653247889405446e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(4.593757250969822e-09, 4.593757250969822e-09).transl(1.0621265259911433e-07, 3.887126009362195e-08, 0))
hIsland = hIsland.sub(rect(6.599047035306625e-09, 6.599047035306625e-09).transl(-1.8594128718631377e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.075713373313376e-10, 8.075713373313376e-10).transl(7.17160809334652e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(6.152463276578541e-09, 6.152463276578541e-09).transl(9.9025722630059e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(1.4729806879498442e-09, 1.4729806879498442e-09).transl(7.351246521114286e-08, -4e-08, 0))
hIsland = hIsland.add(rect(6.900010488573183e-09, 6.900010488573183e-09).transl(-8.582460320517841e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(9.479350350911262e-09, 9.479350350911262e-09).transl(5.150266470841662e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(2.3753670405875583e-09, 2.3753670405875583e-09).transl(-4.830012610903237e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.260024327278966e-09, 8.260024327278966e-09).transl(1.5060498918117312e-09, -4e-08, 0))
hIsland = hIsland.sub(rect(4.261340820878712e-10, 4.261340820878712e-10).transl(-1.0697347362749839e-07, 3.813179508103716e-08, 0))
hIsland = hIsland.add(rect(5.437313750301678e-09, 5.437313750301678e-09).transl(-7.90597328394648e-08, 4e-08, 0))
hIsland = hIsland.add(rect(1.2861721579478224e-09, 1.2861721579478224e-09).transl(3.6984836947799915e-08, 4e-08, 0))
hIsland = hIsland.add(rect(6.296165560216602e-09, 6.296165560216602e-09).transl(1.0015333844283821e-07, -4e-08, 0))
hIsland = hIsland.add(rect(8.951518476987399e-09, 8.951518476987399e-09).transl(7.606125841820953e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(2.003225691587025e-09, 2.003225691587025e-09).transl(-6.032264067317893e-08, 4e-08, 0))
hIsland = hIsland.add(rect(3.1447392556290875e-09, 3.1447392556290875e-09).transl(-6.141594331550249e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(8.686870438739514e-09, 8.686870438739514e-09).transl(7.418726096559264e-08, 4e-08, 0))
hIsland = hIsland.add(rect(2.2002164202351148e-09, 2.2002164202351148e-09).transl(3.384692350045243e-08, 4e-08, 0))
hIsland = hIsland.sub(rect(4.407204430193729e-09, 4.407204430193729e-09).transl(1.1746885571937192e-08, 4e-08, 0))
hIsland = hIsland.add(rect(4.985388393120072e-09, 4.985388393120072e-09).transl(-1.0701337152942052e-07, -3.808754742384701e-08, 0))
hIsland = hIsland.sub(rect(8.12620105152707e-09, 8.12620105152707e-09).transl(7.42762129190112e-08, -4e-08, 0))
hIsland = hIsland.add(rect(2.1472873594399054e-09, 2.1472873594399054e-09).transl(-4.587868679080166e-08, 4e-08, 0))
hIsland = hIsland.add(rect(7.758314498479457e-10, 7.758314498479457e-10).transl(-6.875088646995671e-08, -4e-08, 0))
hIsland = hIsland.add(rect(8.908789906313055e-09, 8.908789906313055e-09).transl(1.040733893749494e-07, 3.9950248776597145e-08, 0))
hIsland = hIsland.sub(rect(2.6175931301228805e-09, 2.6175931301228805e-09).transl(-1.1494537502129826e-07, -3.894084501096739e-09, 0))
hIsland = hIsland.sub(rect(3.598866513633261e-09, 3.598866513633261e-09).transl(1.1376983734516947e-07, 1.7999938131803008e-08, 0))
hIsland = hIsland.sub(rect(2.507293017930592e-09, 2.507293017930592e-09).transl(-9.104038417698673e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(7.757203931645692e-09, 7.757203931645692e-09).transl(3.25772509671994e-08, 4e-08, 0))
hIsland = hIsland.add(rect(1.507958793132247e-10, 1.507958793132247e-10).transl(-8.486964360767158e-08, -4e-08, 0))
hIsland = hIsland.add(rect(7.641852476551847e-10, 7.641852476551847e-10).transl(9.091463190708492e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(4.937408087952128e-09, 4.937408087952128e-09).transl(1.9760211686824138e-09, 4e-08, 0))
hIsland = hIsland.sub(rect(6.482025440520618e-09, 6.482025440520618e-09).transl(7.404264784259349e-08, -4e-08, 0))
hIsland = hIsland.sub(rect(1.4546061091450735e-09, 1.4546061091450735e-09).transl(-6.102232895372168e-08, -4e-08, 0))
hIsland = hIsland.add(rect(1.0260646145279006e-09, 1.0260646145279006e-09).transl(-1.940690589188953e-08, -4e-08, 0))
vIsland := hIsland.rotz(pi / 2)
vIslands := Universe().Inverse()
hIslands := Universe().Inverse()
hIslands = hIslands.add(hIsland.transl(-a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, a, 0))
hIslands = hIslands.add(hIsland.transl(a/2, -a, 0))
hIslands = hIslands.add(hIsland.transl(-a/2, 0, 0))
hIslands = hIslands.add(hIsland.transl(a/2, 0, 0))
vIslands = vIslands.add(vIsland.transl(-a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, a/2, 0))
vIslands = vIslands.add(vIsland.transl(-a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(a, -a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, a/2, 0))
vIslands = vIslands.add(vIsland.transl(0, -a/2, 0))
DefRegion(1, hIslands)
DefRegion(2, vIslands)
TableAdd(m_full.Region(1))
TableAdd(m_full.Region(2))
setgeom(hIslands.add(vIslands))
save(m)
r2o2 := sqrt(2) / 2
m = RandomMagSeed(4)
B_ext = vector(Bmax*r2o2, Bmax*r2o2, 0)
relax()
minimize()
for B := Bmax; B >= -Bmax; B -= Bstep {
	B_ext = vector(B*r2o2, B*r2o2, 0)
	minimize()
	tablesave()
}
//********************************************************************//
//Please cite the following references, relevant for your simulation. //
//See bibtex file in output folder for justification.                 //
//********************************************************************//
//   * Vansteenkiste et al., AIP Adv. 4, 107133 (2014).
//   * Exl et al., J. Appl. Phys. 115, 17D118 (2014).
